!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CAPACITY	day12/hill_climbing.c	/^const int CAPACITY = MAX_ROW * MAX_COL;$/;"	v
COORD	day12/hill_climbing.c	/^} COORD;$/;"	t	typeref:struct:__anon2	file:
HEAP	day12/hill_climbing.c	/^} HEAP;$/;"	t	typeref:struct:__anon4	file:
MAP	day12/hill_climbing.c	/^} MAP;$/;"	t	typeref:struct:__anon1	file:
MAX_COL	day12/hill_climbing.c	/^const int MAX_COL =100;$/;"	v
MAX_ROW	day12/hill_climbing.c	/^const int MAX_ROW = 50;$/;"	v
POINT	day12/hill_climbing.c	/^} POINT;$/;"	t	typeref:struct:__anon3	file:
build_min_heap	day12/hill_climbing.c	/^void build_min_heap(HEAP *heap) {$/;"	f
capacity	day12/hill_climbing.c	/^    int capacity;$/;"	m	struct:__anon4	file:
col	day12/hill_climbing.c	/^    int col;$/;"	m	struct:__anon2	file:
compare	day12/hill_climbing.c	/^int compare(POINT a, POINT b) {$/;"	f
coord	day12/hill_climbing.c	/^    COORD coord;$/;"	m	struct:__anon3	file:
coord	day12/hill_climbing.c	/^COORD coord(int id) {$/;"	f
count	day12/hill_climbing.c	/^    int count;$/;"	m	struct:__anon4	file:
destroy_heap	day12/hill_climbing.c	/^void destroy_heap(HEAP *heap) {$/;"	f
distance	day12/hill_climbing.c	/^    int distance;$/;"	m	struct:__anon3	file:
extract_min	day12/hill_climbing.c	/^POINT extract_min(HEAP *heap) {$/;"	f
heapify	day12/hill_climbing.c	/^void heapify(HEAP *heap, int i) {$/;"	f
insert	day12/hill_climbing.c	/^void insert(HEAP *heap, POINT value) {$/;"	f
is_lower	day12/hill_climbing.c	/^int is_lower(HEAP *heap, int i, int j) {$/;"	f
is_upper	day12/hill_climbing.c	/^int is_upper(HEAP *heap, int i, int j) {$/;"	f
left_child	day12/hill_climbing.c	/^int left_child(int i) {$/;"	f
main	day12/hill_climbing.c	/^int main(int argc, char *argv[]) {$/;"	f
max_col	day12/hill_climbing.c	/^    int max_col;$/;"	m	struct:__anon1	file:
max_row	day12/hill_climbing.c	/^    int max_row;$/;"	m	struct:__anon1	file:
new_min_heap	day12/hill_climbing.c	/^HEAP *new_min_heap(int capacity) {$/;"	f
node_id	day12/hill_climbing.c	/^int node_id(COORD coord) {$/;"	f
parent	day12/hill_climbing.c	/^int parent(int i) {$/;"	f
possible_steps	day12/hill_climbing.c	/^int possible_steps(MAP *map, int row, int col, COORD steps[4]) {$/;"	f
print_heap	day12/hill_climbing.c	/^void print_heap(HEAP *heap) {$/;"	f
print_value	day12/hill_climbing.c	/^void print_value(POINT value) {$/;"	f
read_puzzle	day12/hill_climbing.c	/^void read_puzzle(FILE *puzzle_file, MAP *map) {$/;"	f
right_child	day12/hill_climbing.c	/^int right_child(int i) {$/;"	f
row	day12/hill_climbing.c	/^    int row;$/;"	m	struct:__anon2	file:
square_at	day12/hill_climbing.c	/^char square_at(MAP *map, int row, int col) {$/;"	f
squares	day12/hill_climbing.c	/^    char *squares;$/;"	m	struct:__anon1	file:
swap_values	day12/hill_climbing.c	/^void swap_values(HEAP *heap, int i, int j) {$/;"	f
values	day12/hill_climbing.c	/^    POINT *values;$/;"	m	struct:__anon4	file:
